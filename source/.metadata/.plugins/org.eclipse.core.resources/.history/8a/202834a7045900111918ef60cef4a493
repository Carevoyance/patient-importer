package org.mitre.pophealth.client.ui;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseMotionAdapter;
import java.lang.reflect.InvocationTargetException;

import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.Timer;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.log4j.Logger;
import org.apache.log4j.spi.LoggerFactory;

public class ImporterFrameLogic extends ImporterFrame {
	private static final long serialVersionUID = 6959104115108299731L;
	
	private static final Log logger = LogFactory.getLog(ImporterFrameLogic.class);
	
	private TranslucentProgressJPanel glass = new TranslucentProgressJPanel();

	public ImporterFrameLogic() {
		super();

		glass.addMouseListener(new MouseAdapter() {
		});
		glass.addMouseMotionListener(new MouseMotionAdapter() {
		});
		glass.addKeyListener(new KeyAdapter() {
		});

		glass.setFocusCycleRoot(true);
		glass.requestFocus();
		setGlassPane(glass);
		glass.setOpaque(false);

		initUILogic();

	}

	private void initUILogic() {
		getCloseButton().addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});
		getImportButton().addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				glass.setVisible(true);
				Timer timer = new Timer(500, new ImportPatientsListener(glass));
				timer.setInitialDelay(0);
				timer.start();
			}
		});
	}

	private static class ImportPatientsListener implements ActionListener {

		private TranslucentProgressJPanel glass;
		
		public ImportPatientsListener(TranslucentProgressJPanel glass) {
			this.glass = glass;
		}

		@Override
		public void actionPerformed(ActionEvent e) {
			glass.update(100);
			logger.info("running");
		}

//		@Override
//		public void run() {
//		}
		
	}
	
	@SuppressWarnings("serial")
	private static class TranslucentProgressJPanel extends ProgressJPanel {
		
		private int total;
		
		public TranslucentProgressJPanel() {
			super();
		}
		

		@Override
		protected void paintComponent(Graphics g) {
			Graphics2D g2 = (Graphics2D) g.create();

			g2.setPaint(new Color(255, 255, 255, 190));
			g2.fillRect(0, 0, getWidth(), getHeight());

			g2.setPaint(new Color(185, 185, 185, 220));
			int x = 110;
			int y = 80;
			g2.fillRect(x, y, 410, 170);

			g2.dispose();
		}
		
		public void setTotal(int total) {
			this.total = total;
		}
		
		public void update(int current) {
			getLoadingPatintsValueLabel().setText(current + " of " + total);
			repaint();
		}
		
		
	}

}
